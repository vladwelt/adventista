// 
//<!DOCTYPE html>
//<html>
//  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# githubog: http://ogp.me/ns/fb/githubog#">
//    <meta charset='utf-8'>
//    <meta http-equiv="X-UA-Compatible" content="IE=edge">
//        <title>prefixfree/prefixfree.min.js at gh-pages · LeaVerou/prefixfree · GitHub</title>
//    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
//    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />
//    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png" />
//    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png" />
//    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png" />
//    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png" />
//    <link rel="logo" type="image/svg" href="http://github-media-downloads.s3.amazonaws.com/github-logo.svg" />
//    <link rel="xhr-socket" href="/_sockets" />
//
//
//    <meta name="msapplication-TileImage" content="/windows-tile.png" />
//    <meta name="msapplication-TileColor" content="#ffffff" />
//    <meta name="selected-link" value="repo_source" data-pjax-transient />
//
//    
//    
//    <link rel="icon" type="image/x-icon" href="/favicon.ico" />
//
//    <meta content="authenticity_token" name="csrf-param" />
//<meta content="Jtgjj5hNEndTFAF/SaV5opSoZfBfgNcrDVB7VWqsCnM=" name="csrf-token" />
//
//    <link href="https://a248.e.akamai.net/assets.github.com/assets/github-2bf871a9b64bd2274d95998848be29a48393d86b.css" media="all" rel="stylesheet" type="text/css" />
//    <link href="https://a248.e.akamai.net/assets.github.com/assets/github2-efec9e1c49198032b9e454c52d6853c14695e07f.css" media="all" rel="stylesheet" type="text/css" />
//    
//
//
//      <script src="https://a248.e.akamai.net/assets.github.com/assets/frameworks-92d138f450f2960501e28397a2f63b0f100590f0.js" type="text/javascript"></script>
//      <script src="https://a248.e.akamai.net/assets.github.com/assets/github-652d126fe16c0eae5a108ecc4fa6cc2bc8730de1.js" type="text/javascript"></script>
//      
//      <meta http-equiv="x-pjax-version" content="7a45df27db183db51db8da8e1d03dabd">
//
//        <link data-pjax-transient rel='permalink' href='/LeaVerou/prefixfree/blob/b44a065d048a3c218970f23118010446206ca4d9/prefixfree.min.js'>
//    <meta property="og:title" content="prefixfree"/>
//    <meta property="og:type" content="githubog:gitrepository"/>
//    <meta property="og:url" content="https://github.com/LeaVerou/prefixfree"/>
//    <meta property="og:image" content="https://secure.gravatar.com/avatar/3869e93ce6b2a22e37cf13281d9e6f75?s=420&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"/>
//    <meta property="og:site_name" content="GitHub"/>
//    <meta property="og:description" content="prefixfree - Break free from CSS prefix hell!"/>
//    <meta property="twitter:card" content="summary"/>
//    <meta property="twitter:site" content="@GitHub">
//    <meta property="twitter:title" content="LeaVerou/prefixfree"/>
//
//    <meta name="description" content="prefixfree - Break free from CSS prefix hell!" />
//
//  <link href="https://github.com/LeaVerou/prefixfree/commits/gh-pages.atom" rel="alternate" title="Recent Commits to prefixfree:gh-pages" type="application/atom+xml" />
//
//  </head>
//
//
//  <body class="logged_out page-blob  vis-public env-production  ">
//    <div id="wrapper">
//
//      
//
//      
//      
//      
//
//      
//      <div class="header header-logged-out">
//  <div class="container clearfix">
//
//    <a class="header-logo-wordmark" href="https://github.com/">Github</a>
//
//    <div class="header-actions">
//        <a class="button primary" href="https://github.com/signup">Sign up for free</a>
//      <a class="button" href="https://github.com/login?return_to=%2FLeaVerou%2Fprefixfree%2Fblob%2Fgh-pages%2Fprefixfree.min.js">Sign in</a>
//    </div>
//
//      <ul class="top-nav">
//          <li class="explore"><a href="https://github.com/explore">Explore GitHub</a></li>
//        <li class="search"><a href="https://github.com/search">Search</a></li>
//        <li class="features"><a href="https://github.com/features">Features</a></li>
//          <li class="blog"><a href="https://github.com/blog">Blog</a></li>
//      </ul>
//
//  </div>
//</div>
//
//
//      
//
//      
//
//
//            <div class="site hfeed" itemscope itemtype="http://schema.org/WebPage">
//      <div class="hentry">
//        
//        <div class="pagehead repohead instapaper_ignore readability-menu ">
//          <div class="container">
//            <div class="title-actions-bar">
//              
//
//<ul class="pagehead-actions">
//
//
//
//    <li>
//      <a href="/login?return_to=%2FLeaVerou%2Fprefixfree"
//        class="minibutton js-toggler-target star-button entice tooltipped upwards"
//        title="You must be signed in to use this feature" rel="nofollow">
//        <span class="mini-icon mini-icon-star"></span>Star
//      </a>
//      <a class="social-count js-social-count" href="/LeaVerou/prefixfree/stargazers">
//        1,699
//      </a>
//    </li>
//    <li>
//      <a href="/login?return_to=%2FLeaVerou%2Fprefixfree"
//        class="minibutton js-toggler-target fork-button entice tooltipped upwards"
//        title="You must be signed in to fork a repository" rel="nofollow">
//        <span class="mini-icon mini-icon-fork"></span>Fork
//      </a>
//      <a href="/LeaVerou/prefixfree/network" class="social-count">
//        283
//      </a>
//    </li>
//</ul>
//
//              <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
//                <span class="repo-label"><span>public</span></span>
//                <span class="mega-icon mega-icon-public-repo"></span>
//                <span class="author vcard">
//                  <a href="/LeaVerou" class="url fn" itemprop="url" rel="author">
//                  <span itemprop="title">LeaVerou</span>
//                  </a></span> /
//                <strong><a href="/LeaVerou/prefixfree" class="js-current-repository">prefixfree</a></strong>
//              </h1>
//            </div>
//
//            
//  <ul class="tabs">
//    <li class="pulse-nav"><a href="/LeaVerou/prefixfree/pulse" class="js-selected-navigation-item " data-selected-links="pulse /LeaVerou/prefixfree/pulse" rel="nofollow"><span class="mini-icon mini-icon-pulse"></span></a></li>
//    <li><a href="/LeaVerou/prefixfree" class="js-selected-navigation-item selected" data-selected-links="repo_source repo_downloads repo_commits repo_tags repo_branches /LeaVerou/prefixfree">Code</a></li>
//    <li><a href="/LeaVerou/prefixfree/network" class="js-selected-navigation-item " data-selected-links="repo_network /LeaVerou/prefixfree/network">Network</a></li>
//    <li><a href="/LeaVerou/prefixfree/pulls" class="js-selected-navigation-item " data-selected-links="repo_pulls /LeaVerou/prefixfree/pulls">Pull Requests <span class='counter'>8</span></a></li>
//
//      <li><a href="/LeaVerou/prefixfree/issues" class="js-selected-navigation-item " data-selected-links="repo_issues /LeaVerou/prefixfree/issues">Issues <span class='counter'>59</span></a></li>
//
//      <li><a href="/LeaVerou/prefixfree/wiki" class="js-selected-navigation-item " data-selected-links="repo_wiki /LeaVerou/prefixfree/wiki">Wiki</a></li>
//
//
//    <li><a href="/LeaVerou/prefixfree/graphs" class="js-selected-navigation-item " data-selected-links="repo_graphs repo_contributors /LeaVerou/prefixfree/graphs">Graphs</a></li>
//
//
//  </ul>
//  
//<div class="tabnav">
//
//  <span class="tabnav-right">
//    <ul class="tabnav-tabs">
//          <li><a href="/LeaVerou/prefixfree/tags" class="js-selected-navigation-item tabnav-tab" data-selected-links="repo_tags /LeaVerou/prefixfree/tags">Tags <span class="counter blank">0</span></a></li>
//    </ul>
//  </span>
//
//  <div class="tabnav-widget scope">
//
//
//    <div class="select-menu js-menu-container js-select-menu js-branch-menu">
//      <a class="minibutton select-menu-button js-menu-target" data-hotkey="w" data-ref="gh-pages">
//        <span class="mini-icon mini-icon-branch"></span>
//        <i>branch:</i>
//        <span class="js-select-button">gh-pages</span>
//      </a>
//
//      <div class="select-menu-modal-holder js-menu-content js-navigation-container">
//
//        <div class="select-menu-modal">
//          <div class="select-menu-header">
//            <span class="select-menu-title">Switch branches/tags</span>
//            <span class="mini-icon mini-icon-remove-close js-menu-close"></span>
//          </div> <!-- /.select-menu-header -->
//
//          <div class="select-menu-filters">
//            <div class="select-menu-text-filter">
//              <input type="text" id="commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
//            </div>
//            <div class="select-menu-tabs">
//              <ul>
//                <li class="select-menu-tab">
//                  <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
//                </li>
//                <li class="select-menu-tab">
//                  <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
//                </li>
//              </ul>
//            </div><!-- /.select-menu-tabs -->
//          </div><!-- /.select-menu-filters -->
//
//          <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket css-truncate" data-tab-filter="branches">
//
//            <div data-filterable-for="commitish-filter-field" data-filterable-type="substring">
//
//                <div class="select-menu-item js-navigation-item selected">
//                  <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
//                  <a href="/LeaVerou/prefixfree/blob/gh-pages/prefixfree.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="gh-pages" rel="nofollow" title="gh-pages">gh-pages</a>
//                </div> <!-- /.select-menu-item -->
//            </div>
//
//              <div class="select-menu-no-results">Nothing to show</div>
//          </div> <!-- /.select-menu-list -->
//
//
//          <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket css-truncate" data-tab-filter="tags">
//            <div data-filterable-for="commitish-filter-field" data-filterable-type="substring">
//
//            </div>
//
//            <div class="select-menu-no-results">Nothing to show</div>
//
//          </div> <!-- /.select-menu-list -->
//
//        </div> <!-- /.select-menu-modal -->
//      </div> <!-- /.select-menu-modal-holder -->
//    </div> <!-- /.select-menu -->
//
//  </div> <!-- /.scope -->
//
//  <ul class="tabnav-tabs">
//    <li><a href="/LeaVerou/prefixfree" class="selected js-selected-navigation-item tabnav-tab" data-selected-links="repo_source /LeaVerou/prefixfree">Files</a></li>
//    <li><a href="/LeaVerou/prefixfree/commits/gh-pages" class="js-selected-navigation-item tabnav-tab" data-selected-links="repo_commits /LeaVerou/prefixfree/commits/gh-pages">Commits</a></li>
//    <li><a href="/LeaVerou/prefixfree/branches" class="js-selected-navigation-item tabnav-tab" data-selected-links="repo_branches /LeaVerou/prefixfree/branches" rel="nofollow">Branches <span class="counter ">1</span></a></li>
//  </ul>
//
//</div>
//
//  
//  
//  
//
//
//            
//          </div>
//        </div><!-- /.repohead -->
//
//        <div id="js-repo-pjax-container" class="container context-loader-container" data-pjax-container>
//          
//
//
//<!-- blob contrib key: blob_contributors:v21:ad94f3980ef71baf7b71b18b507e5d6e -->
//<!-- blob contrib frag key: views10/v8/blob_contributors:v21:ad94f3980ef71baf7b71b18b507e5d6e -->
//
//
//<div id="slider">
//    <div class="frame-meta">
//
//      <p title="This is a placeholder element" class="js-history-link-replace hidden"></p>
//
//        <div class="breadcrumb">
//          <span class='bold'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/LeaVerou/prefixfree" class="js-slide-to" data-branch="gh-pages" data-direction="back" itemscope="url"><span itemprop="title">prefixfree</span></a></span></span><span class="separator"> / </span><strong class="final-path">prefixfree.min.js</strong> <span class="js-zeroclipboard zeroclipboard-button" data-clipboard-text="prefixfree.min.js" data-copied-hint="copied!" title="copy to clipboard"><span class="mini-icon mini-icon-clipboard"></span></span>
//        </div>
//
//      <a href="/LeaVerou/prefixfree/find/gh-pages" class="js-slide-to" data-hotkey="t" style="display:none">Show File Finder</a>
//
//
//        
//  <div class="commit file-history-tease">
//    <img class="main-avatar" height="24" src="https://secure.gravatar.com/avatar/3869e93ce6b2a22e37cf13281d9e6f75?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="24" />
//    <span class="author"><a href="/LeaVerou" rel="author">LeaVerou</a></span>
//    <time class="js-relative-date" datetime="2013-03-16T14:01:43-07:00" title="2013-03-16 14:01:43">March 16, 2013</time>
//    <div class="commit-title">
//        <a href="/LeaVerou/prefixfree/commit/9316021d2d1b545d2fff9c01b593f1ae4b7e289b" class="message">Added min-content</a>
//    </div>
//
//    <div class="participation">
//      <p class="quickstat"><a href="#blob_contributors_box" rel="facebox"><strong>6</strong> contributors</a></p>
//          <a class="avatar tooltipped downwards" title="LeaVerou" href="/LeaVerou/prefixfree/commits/gh-pages/prefixfree.min.js?author=LeaVerou"><img height="20" src="https://secure.gravatar.com/avatar/3869e93ce6b2a22e37cf13281d9e6f75?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="20" /></a>
//    <a class="avatar tooltipped downwards" title="jacobrask" href="/LeaVerou/prefixfree/commits/gh-pages/prefixfree.min.js?author=jacobrask"><img height="20" src="https://secure.gravatar.com/avatar/741704f57835da6c8a5d17a6c998960c?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="20" /></a>
//    <a class="avatar tooltipped downwards" title="SimonSapin" href="/LeaVerou/prefixfree/commits/gh-pages/prefixfree.min.js?author=SimonSapin"><img height="20" src="https://secure.gravatar.com/avatar/67948daaccf4a831fb6ed67ff89193f3?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="20" /></a>
//    <a class="avatar tooltipped downwards" title="gotcha" href="/LeaVerou/prefixfree/commits/gh-pages/prefixfree.min.js?author=gotcha"><img height="20" src="https://secure.gravatar.com/avatar/fa370c58c6265e0e496668f4cb39e14a?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="20" /></a>
//    <a class="avatar tooltipped downwards" title="dziudek" href="/LeaVerou/prefixfree/commits/gh-pages/prefixfree.min.js?author=dziudek"><img height="20" src="https://secure.gravatar.com/avatar/c37ce209cf156de0cdaf6863508518c3?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="20" /></a>
//    <a class="avatar tooltipped downwards" title="vincentbernat" href="/LeaVerou/prefixfree/commits/gh-pages/prefixfree.min.js?author=vincentbernat"><img height="20" src="https://secure.gravatar.com/avatar/2c0bde3f5628f35390c42fe505b79da4?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="20" /></a>
//
//
//    </div>
//    <div id="blob_contributors_box" style="display:none">
//      <h2>Users on GitHub who have contributed to this file</h2>
//      <ul class="facebox-user-list">
//        <li>
//          <img height="24" src="https://secure.gravatar.com/avatar/3869e93ce6b2a22e37cf13281d9e6f75?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="24" />
//          <a href="/LeaVerou">LeaVerou</a>
//        </li>
//        <li>
//          <img height="24" src="https://secure.gravatar.com/avatar/741704f57835da6c8a5d17a6c998960c?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="24" />
//          <a href="/jacobrask">jacobrask</a>
//        </li>
//        <li>
//          <img height="24" src="https://secure.gravatar.com/avatar/67948daaccf4a831fb6ed67ff89193f3?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="24" />
//          <a href="/SimonSapin">SimonSapin</a>
//        </li>
//        <li>
//          <img height="24" src="https://secure.gravatar.com/avatar/fa370c58c6265e0e496668f4cb39e14a?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="24" />
//          <a href="/gotcha">gotcha</a>
//        </li>
//        <li>
//          <img height="24" src="https://secure.gravatar.com/avatar/c37ce209cf156de0cdaf6863508518c3?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="24" />
//          <a href="/dziudek">dziudek</a>
//        </li>
//        <li>
//          <img height="24" src="https://secure.gravatar.com/avatar/2c0bde3f5628f35390c42fe505b79da4?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="24" />
//          <a href="/vincentbernat">vincentbernat</a>
//        </li>
//      </ul>
//    </div>
//  </div>
//
//
//    </div><!-- ./.frame-meta -->
//
//    <div class="frames">
//      <div class="frame" data-permalink-url="/LeaVerou/prefixfree/blob/b44a065d048a3c218970f23118010446206ca4d9/prefixfree.min.js" data-title="prefixfree/prefixfree.min.js at gh-pages · LeaVerou/prefixfree · GitHub" data-type="blob">
//
//        <div id="files" class="bubble">
//          <div class="file">
//            <div class="meta">
//              <div class="info">
//                <span class="icon"><b class="mini-icon mini-icon-text-file"></b></span>
//                <span class="mode" title="File Mode">file</span>
//                  <span>5 lines (5 sloc)</span>
//                <span>6.139 kb</span>
//              </div>
//              <div class="actions">
//                <div class="button-group">
//                      <a class="minibutton js-entice" href=""
//                         data-entice="You must be signed in and on a branch to make or propose changes">Edit</a>
//                  <a href="/LeaVerou/prefixfree/raw/gh-pages/prefixfree.min.js" class="button minibutton " id="raw-url">Raw</a>
//                    <a href="/LeaVerou/prefixfree/blame/gh-pages/prefixfree.min.js" class="button minibutton ">Blame</a>
//                  <a href="/LeaVerou/prefixfree/commits/gh-pages/prefixfree.min.js" class="button minibutton " rel="nofollow">History</a>
//                </div><!-- /.button-group -->
//              </div><!-- /.actions -->
//
//            </div>
//                <div class="blob-wrapper data type-javascript js-blob-data">
//      <table class="file-code file-diff">
//        <tr class="file-code-line">
//          <td class="blob-line-nums">
//            <span id="L1" rel="#L1">1</span>
//<span id="L2" rel="#L2">2</span>
//<span id="L3" rel="#L3">3</span>
//<span id="L4" rel="#L4">4</span>
//<span id="L5" rel="#L5">5</span>
//
//          </td>
//          <td class="blob-line-code">
//                  <div class="highlight"><pre><div class='line' id='LC1'><span class="cm">/**</span></div><div class='line' id='LC2'><span class="cm"> * StyleFix 1.0.3 &amp; PrefixFree 1.0.7</span></div><div class='line' id='LC3'><span class="cm"> * @author Lea Verou</span></div><div class='line' id='LC4'><span class="cm"> * MIT license</span></div><div class='line' id='LC5'><span class="cm"> */</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">t</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span><span class="p">[].</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">((</span><span class="nx">t</span><span class="o">||</span><span class="nb">document</span><span class="p">).</span><span class="nx">querySelectorAll</span><span class="p">(</span><span class="nx">e</span><span class="p">))}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nb">window</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">)</span><span class="k">return</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nb">window</span><span class="p">.</span><span class="nx">StyleFix</span><span class="o">=</span><span class="p">{</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">rel</span><span class="o">!==</span><span class="s2">&quot;stylesheet&quot;</span><span class="o">||</span><span class="nx">t</span><span class="p">.</span><span class="nx">hasAttribute</span><span class="p">(</span><span class="s2">&quot;data-noprefix&quot;</span><span class="p">))</span><span class="k">return</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="k">return</span><span class="p">}</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">href</span><span class="o">||</span><span class="nx">t</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;data-href&quot;</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[^\/]+$/</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">s</span><span class="o">=</span><span class="p">(</span><span class="sr">/^[a-z]{3,10}:/</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span><span class="o">||</span><span class="p">[</span><span class="s2">&quot;&quot;</span><span class="p">])[</span><span class="mi">0</span><span class="p">],</span><span class="nx">o</span><span class="o">=</span><span class="p">(</span><span class="sr">/^[a-z]{3,10}:\/\/[^\/]+/</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span><span class="o">||</span><span class="p">[</span><span class="s2">&quot;&quot;</span><span class="p">])[</span><span class="mi">0</span><span class="p">],</span><span class="nx">u</span><span class="o">=</span><span class="sr">/^([^?]*)\??/</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">r</span><span class="p">)[</span><span class="mi">1</span><span class="p">],</span><span class="nx">a</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">new</span> <span class="nx">XMLHttpRequest</span><span class="p">,</span><span class="nx">l</span><span class="p">;</span><span class="nx">f</span><span class="p">.</span><span class="nx">onreadystatechange</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">f</span><span class="p">.</span><span class="nx">readyState</span><span class="o">===</span><span class="mi">4</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">()};</span><span class="nx">l</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">responseText</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">.</span><span class="nx">parentNode</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="o">!</span><span class="nx">f</span><span class="p">.</span><span class="nx">status</span><span class="o">||</span><span class="nx">f</span><span class="p">.</span><span class="nx">status</span><span class="o">&lt;</span><span class="mi">400</span><span class="o">||</span><span class="nx">f</span><span class="p">.</span><span class="nx">status</span><span class="o">&gt;</span><span class="mi">600</span><span class="p">)){</span><span class="nx">n</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">fix</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span><span class="nx">t</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">){</span><span class="nx">n</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/url\(\s*?((?:&quot;|&#39;)?)(.+?)\1\s*?\)/gi</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">){</span><span class="k">return</span><span class="sr">/^([a-z]{3,10}:|#)/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span><span class="o">?</span><span class="nx">e</span><span class="o">:</span><span class="sr">/^\/\//</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span><span class="o">?</span><span class="s1">&#39;url(&quot;&#39;</span><span class="o">+</span><span class="nx">s</span><span class="o">+</span><span class="nx">n</span><span class="o">+</span><span class="s1">&#39;&quot;)&#39;</span><span class="o">:</span><span class="sr">/^\//</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span><span class="o">?</span><span class="s1">&#39;url(&quot;&#39;</span><span class="o">+</span><span class="nx">o</span><span class="o">+</span><span class="nx">n</span><span class="o">+</span><span class="s1">&#39;&quot;)&#39;</span><span class="o">:</span><span class="sr">/^\?/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span><span class="o">?</span><span class="s1">&#39;url(&quot;&#39;</span><span class="o">+</span><span class="nx">u</span><span class="o">+</span><span class="nx">n</span><span class="o">+</span><span class="s1">&#39;&quot;)&#39;</span><span class="o">:</span><span class="s1">&#39;url(&quot;&#39;</span><span class="o">+</span><span class="nx">i</span><span class="o">+</span><span class="nx">n</span><span class="o">+</span><span class="s1">&#39;&quot;)&#39;</span><span class="p">});</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/([\\\^\$*+[\]?{}.=!:(|)])/g</span><span class="p">,</span><span class="s2">&quot;\\$1&quot;</span><span class="p">);</span><span class="nx">n</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;\\b(behavior:\\s*?url\\(&#39;?\&quot;?)&quot;</span><span class="o">+</span><span class="nx">r</span><span class="p">,</span><span class="s2">&quot;gi&quot;</span><span class="p">),</span><span class="s2">&quot;$1&quot;</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;style&quot;</span><span class="p">);</span><span class="nx">l</span><span class="p">.</span><span class="nx">textContent</span><span class="o">=</span><span class="nx">n</span><span class="p">;</span><span class="nx">l</span><span class="p">.</span><span class="nx">media</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">media</span><span class="p">;</span><span class="nx">l</span><span class="p">.</span><span class="nx">disabled</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">disabled</span><span class="p">;</span><span class="nx">l</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;data-href&quot;</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;href&quot;</span><span class="p">));</span><span class="nx">a</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">t</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">t</span><span class="p">);</span><span class="nx">l</span><span class="p">.</span><span class="nx">media</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">media</span><span class="p">}};</span><span class="k">try</span><span class="p">{</span><span class="nx">f</span><span class="p">.</span><span class="nx">open</span><span class="p">(</span><span class="s2">&quot;GET&quot;</span><span class="p">,</span><span class="nx">r</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="kc">null</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">XDomainRequest</span><span class="o">!=</span><span class="s2">&quot;undefined&quot;</span><span class="p">){</span><span class="nx">f</span><span class="o">=</span><span class="k">new</span> <span class="nx">XDomainRequest</span><span class="p">;</span><span class="nx">f</span><span class="p">.</span><span class="nx">onerror</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">onprogress</span><span class="o">=</span><span class="kd">function</span><span class="p">(){};</span><span class="nx">f</span><span class="p">.</span><span class="nx">onload</span><span class="o">=</span><span class="nx">l</span><span class="p">;</span><span class="nx">f</span><span class="p">.</span><span class="nx">open</span><span class="p">(</span><span class="s2">&quot;GET&quot;</span><span class="p">,</span><span class="nx">r</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="kc">null</span><span class="p">)}}</span><span class="nx">t</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;data-inprogress&quot;</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)},</span><span class="nx">styleElement</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">hasAttribute</span><span class="p">(</span><span class="s2">&quot;data-noprefix&quot;</span><span class="p">))</span><span class="k">return</span><span class="p">;</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">disabled</span><span class="p">;</span><span class="nx">t</span><span class="p">.</span><span class="nx">textContent</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">fix</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">textContent</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span><span class="nx">t</span><span class="p">);</span><span class="nx">t</span><span class="p">.</span><span class="nx">disabled</span><span class="o">=</span><span class="nx">n</span><span class="p">},</span><span class="nx">styleAttribute</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="s2">&quot;style&quot;</span><span class="p">);</span><span class="nx">n</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">fix</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="nx">t</span><span class="p">);</span><span class="nx">t</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;style&quot;</span><span class="p">,</span><span class="nx">n</span><span class="p">)},</span><span class="nx">process</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">t</span><span class="p">(</span><span class="s1">&#39;link[rel=&quot;stylesheet&quot;]:not([data-inprogress])&#39;</span><span class="p">).</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">StyleFix</span><span class="p">.</span><span class="nx">link</span><span class="p">);</span><span class="nx">t</span><span class="p">(</span><span class="s2">&quot;style&quot;</span><span class="p">).</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">StyleFix</span><span class="p">.</span><span class="nx">styleElement</span><span class="p">);</span><span class="nx">t</span><span class="p">(</span><span class="s2">&quot;[style]&quot;</span><span class="p">).</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">StyleFix</span><span class="p">.</span><span class="nx">styleAttribute</span><span class="p">)},</span><span class="nx">register</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">){(</span><span class="nx">e</span><span class="p">.</span><span class="nx">fixers</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">fixers</span><span class="o">||</span><span class="p">[]).</span><span class="nx">splice</span><span class="p">(</span><span class="nx">n</span><span class="o">===</span><span class="kc">undefined</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">fixers</span><span class="p">.</span><span class="nx">length</span><span class="o">:</span><span class="nx">n</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">t</span><span class="p">)},</span><span class="nx">fix</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">.</span><span class="nx">fixers</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="nx">t</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">fixers</span><span class="p">[</span><span class="nx">i</span><span class="p">](</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="p">)</span><span class="o">||</span><span class="nx">t</span><span class="p">;</span><span class="k">return</span> <span class="nx">t</span><span class="p">},</span><span class="nx">camelCase</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/-([a-z])/g</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="k">return</span> <span class="nx">t</span><span class="p">.</span><span class="nx">toUpperCase</span><span class="p">()}).</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&quot;-&quot;</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)},</span><span class="nx">deCamelCase</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[A-Z]/g</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;-&quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()})}};(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">t</span><span class="p">(</span><span class="s1">&#39;link[rel=&quot;stylesheet&quot;]&#39;</span><span class="p">).</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">StyleFix</span><span class="p">.</span><span class="nx">link</span><span class="p">)},</span><span class="mi">10</span><span class="p">);</span><span class="nb">document</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;DOMContentLoaded&quot;</span><span class="p">,</span><span class="nx">StyleFix</span><span class="p">.</span><span class="nx">process</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)})()})();(</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">function</span> <span class="nx">t</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">s</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">n</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="nb">RegExp</span><span class="p">(</span><span class="nx">t</span><span class="o">+</span><span class="s2">&quot;(&quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;|&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="o">+</span><span class="nx">r</span><span class="p">,</span><span class="s2">&quot;gi&quot;</span><span class="p">);</span><span class="nx">s</span><span class="o">=</span><span class="nx">s</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">o</span><span class="p">,</span><span class="nx">i</span><span class="p">)}</span><span class="k">return</span> <span class="nx">s</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nb">window</span><span class="p">.</span><span class="nx">StyleFix</span><span class="o">||!</span><span class="nb">window</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="p">)</span><span class="k">return</span><span class="p">;</span><span class="kd">var</span> <span class="nx">n</span><span class="o">=</span><span class="nb">window</span><span class="p">.</span><span class="nx">PrefixFree</span><span class="o">=</span><span class="p">{</span><span class="nx">prefixCSS</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">prefix</span><span class="p">;</span><span class="nx">n</span><span class="p">.</span><span class="nx">functions</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;linear-gradient&quot;</span><span class="p">)</span><span class="o">&gt;-</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/(\s|:|,)(repeating-)?linear-gradient\(\s*(-?\d*\.?\d*)deg/ig</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">r</span><span class="p">){</span><span class="k">return</span> <span class="nx">t</span><span class="o">+</span><span class="p">(</span><span class="nx">n</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;linear-gradient(&quot;</span><span class="o">+</span><span class="p">(</span><span class="mi">90</span><span class="o">-</span><span class="nx">r</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;deg&quot;</span><span class="p">}));</span><span class="nx">e</span><span class="o">=</span><span class="nx">t</span><span class="p">(</span><span class="s2">&quot;functions&quot;</span><span class="p">,</span><span class="s2">&quot;(\\s|:|,)&quot;</span><span class="p">,</span><span class="s2">&quot;\\s*\\(&quot;</span><span class="p">,</span><span class="s2">&quot;$1&quot;</span><span class="o">+</span><span class="nx">s</span><span class="o">+</span><span class="s2">&quot;$2(&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="nx">e</span><span class="o">=</span><span class="nx">t</span><span class="p">(</span><span class="s2">&quot;keywords&quot;</span><span class="p">,</span><span class="s2">&quot;(\\s|:)&quot;</span><span class="p">,</span><span class="s2">&quot;(\\s|;|\\}|$)&quot;</span><span class="p">,</span><span class="s2">&quot;$1&quot;</span><span class="o">+</span><span class="nx">s</span><span class="o">+</span><span class="s2">&quot;$2$3&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="nx">e</span><span class="o">=</span><span class="nx">t</span><span class="p">(</span><span class="s2">&quot;properties&quot;</span><span class="p">,</span><span class="s2">&quot;(^|\\{|\\s|;)&quot;</span><span class="p">,</span><span class="s2">&quot;\\s*:&quot;</span><span class="p">,</span><span class="s2">&quot;$1&quot;</span><span class="o">+</span><span class="nx">s</span><span class="o">+</span><span class="s2">&quot;$2:&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">properties</span><span class="p">.</span><span class="nx">length</span><span class="p">){</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;\\b(&quot;</span><span class="o">+</span><span class="nx">n</span><span class="p">.</span><span class="nx">properties</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;|&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;)(?!:)&quot;</span><span class="p">,</span><span class="s2">&quot;gi&quot;</span><span class="p">);</span><span class="nx">e</span><span class="o">=</span><span class="nx">t</span><span class="p">(</span><span class="s2">&quot;valueProperties&quot;</span><span class="p">,</span><span class="s2">&quot;\\b&quot;</span><span class="p">,</span><span class="s2">&quot;:(.+?);&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">o</span><span class="p">,</span><span class="nx">s</span><span class="o">+</span><span class="s2">&quot;$1&quot;</span><span class="p">)},</span><span class="nx">e</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">t</span><span class="p">(</span><span class="s2">&quot;selectors&quot;</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="s2">&quot;\\b&quot;</span><span class="p">,</span><span class="nx">n</span><span class="p">.</span><span class="nx">prefixSelector</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="nx">e</span><span class="o">=</span><span class="nx">t</span><span class="p">(</span><span class="s2">&quot;atrules&quot;</span><span class="p">,</span><span class="s2">&quot;@&quot;</span><span class="p">,</span><span class="s2">&quot;\\b&quot;</span><span class="p">,</span><span class="s2">&quot;@&quot;</span><span class="o">+</span><span class="nx">s</span><span class="o">+</span><span class="s2">&quot;$1&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">)}</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nb">RegExp</span><span class="p">(</span><span class="s2">&quot;-&quot;</span><span class="o">+</span><span class="nx">s</span><span class="p">,</span><span class="s2">&quot;g&quot;</span><span class="p">),</span><span class="s2">&quot;-&quot;</span><span class="p">);</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/-\*-(?=[a-z]+)/gi</span><span class="p">,</span><span class="nx">n</span><span class="p">.</span><span class="nx">prefix</span><span class="p">);</span><span class="k">return</span> <span class="nx">e</span><span class="p">},</span><span class="nx">property</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">properties</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">?</span><span class="nx">n</span><span class="p">.</span><span class="nx">prefix</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="nx">e</span><span class="p">},</span><span class="nx">value</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">r</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">t</span><span class="p">(</span><span class="s2">&quot;functions&quot;</span><span class="p">,</span><span class="s2">&quot;(^|\\s|,)&quot;</span><span class="p">,</span><span class="s2">&quot;\\s*\\(&quot;</span><span class="p">,</span><span class="s2">&quot;$1&quot;</span><span class="o">+</span><span class="nx">n</span><span class="p">.</span><span class="nx">prefix</span><span class="o">+</span><span class="s2">&quot;$2(&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="nx">e</span><span class="o">=</span><span class="nx">t</span><span class="p">(</span><span class="s2">&quot;keywords&quot;</span><span class="p">,</span><span class="s2">&quot;(^|\\s)&quot;</span><span class="p">,</span><span class="s2">&quot;(\\s|$)&quot;</span><span class="p">,</span><span class="s2">&quot;$1&quot;</span><span class="o">+</span><span class="nx">n</span><span class="p">.</span><span class="nx">prefix</span><span class="o">+</span><span class="s2">&quot;$2$3&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="k">return</span> <span class="nx">e</span><span class="p">},</span><span class="nx">prefixSelector</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^:{1,2}/</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">e</span><span class="o">+</span><span class="nx">n</span><span class="p">.</span><span class="nx">prefix</span><span class="p">})},</span><span class="nx">prefixProperty</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">prefix</span><span class="o">+</span><span class="nx">e</span><span class="p">;</span><span class="k">return</span> <span class="nx">t</span><span class="o">?</span><span class="nx">StyleFix</span><span class="p">.</span><span class="nx">camelCase</span><span class="p">(</span><span class="nx">r</span><span class="p">)</span><span class="o">:</span><span class="nx">r</span><span class="p">}};(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="p">{},</span><span class="nx">t</span><span class="o">=</span><span class="p">[],</span><span class="nx">r</span><span class="o">=</span><span class="p">{},</span><span class="nx">i</span><span class="o">=</span><span class="nx">getComputedStyle</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">,</span><span class="kc">null</span><span class="p">),</span><span class="nx">s</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">).</span><span class="nx">style</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">n</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">===</span><span class="s2">&quot;-&quot;</span><span class="p">){</span><span class="nx">t</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">n</span><span class="p">);</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;-&quot;</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">r</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="nx">e</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">=++</span><span class="nx">e</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">||</span><span class="mi">1</span><span class="p">;</span><span class="k">while</span><span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">3</span><span class="p">){</span><span class="nx">r</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;-&quot;</span><span class="p">);</span><span class="nx">u</span><span class="p">(</span><span class="nx">s</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">s</span><span class="p">)</span><span class="o">===-</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">s</span><span class="p">)}}},</span><span class="nx">u</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">StyleFix</span><span class="p">.</span><span class="nx">camelCase</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="k">in</span> <span class="nx">s</span><span class="p">};</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">i</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">)</span><span class="nx">o</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="nx">a</span><span class="p">]);</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span> <span class="k">in</span> <span class="nx">i</span><span class="p">)</span><span class="nx">o</span><span class="p">(</span><span class="nx">StyleFix</span><span class="p">.</span><span class="nx">deCamelCase</span><span class="p">(</span><span class="nx">f</span><span class="p">));</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="p">{</span><span class="nx">uses</span><span class="o">:</span><span class="mi">0</span><span class="p">};</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span> <span class="k">in</span> <span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">c</span><span class="p">];</span><span class="nx">l</span><span class="p">.</span><span class="nx">uses</span><span class="o">&lt;</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">l</span><span class="o">=</span><span class="p">{</span><span class="nx">prefix</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">uses</span><span class="o">:</span><span class="nx">h</span><span class="p">})}</span><span class="nx">n</span><span class="p">.</span><span class="nx">prefix</span><span class="o">=</span><span class="s2">&quot;-&quot;</span><span class="o">+</span><span class="nx">l</span><span class="p">.</span><span class="nx">prefix</span><span class="o">+</span><span class="s2">&quot;-&quot;</span><span class="p">;</span><span class="nx">n</span><span class="p">.</span><span class="nx">Prefix</span><span class="o">=</span><span class="nx">StyleFix</span><span class="p">.</span><span class="nx">camelCase</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">prefix</span><span class="p">);</span><span class="nx">n</span><span class="p">.</span><span class="nx">properties</span><span class="o">=</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">t</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">prefix</span><span class="p">)</span><span class="o">===</span><span class="mi">0</span><span class="p">){</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">prefix</span><span class="p">.</span><span class="nx">length</span><span class="p">);</span><span class="nx">u</span><span class="p">(</span><span class="nx">p</span><span class="p">)</span><span class="o">||</span><span class="nx">n</span><span class="p">.</span><span class="nx">properties</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">p</span><span class="p">)}}</span><span class="nx">n</span><span class="p">.</span><span class="nx">Prefix</span><span class="o">==</span><span class="s2">&quot;Ms&quot;</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="s2">&quot;transform&quot;</span><span class="k">in</span> <span class="nx">s</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="p">(</span><span class="s2">&quot;MsTransform&quot;</span><span class="k">in</span> <span class="nx">s</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="s2">&quot;msTransform&quot;</span><span class="k">in</span> <span class="nx">s</span><span class="o">&amp;&amp;</span><span class="nx">n</span><span class="p">.</span><span class="nx">properties</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;transform&quot;</span><span class="p">,</span><span class="s2">&quot;transform-origin&quot;</span><span class="p">);</span><span class="nx">n</span><span class="p">.</span><span class="nx">properties</span><span class="p">.</span><span class="nx">sort</span><span class="p">()})();(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">i</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">t</span><span class="p">){</span><span class="nx">r</span><span class="p">[</span><span class="nx">t</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">r</span><span class="p">[</span><span class="nx">t</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="k">return</span><span class="o">!!</span><span class="nx">r</span><span class="p">[</span><span class="nx">t</span><span class="p">]}</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="p">{</span><span class="s2">&quot;linear-gradient&quot;</span><span class="o">:</span><span class="p">{</span><span class="nx">property</span><span class="o">:</span><span class="s2">&quot;backgroundImage&quot;</span><span class="p">,</span><span class="nx">params</span><span class="o">:</span><span class="s2">&quot;red, teal&quot;</span><span class="p">},</span><span class="nx">calc</span><span class="o">:</span><span class="p">{</span><span class="nx">property</span><span class="o">:</span><span class="s2">&quot;width&quot;</span><span class="p">,</span><span class="nx">params</span><span class="o">:</span><span class="s2">&quot;1px + 5%&quot;</span><span class="p">},</span><span class="nx">element</span><span class="o">:</span><span class="p">{</span><span class="nx">property</span><span class="o">:</span><span class="s2">&quot;backgroundImage&quot;</span><span class="p">,</span><span class="nx">params</span><span class="o">:</span><span class="s2">&quot;#foo&quot;</span><span class="p">},</span><span class="s2">&quot;cross-fade&quot;</span><span class="o">:</span><span class="p">{</span><span class="nx">property</span><span class="o">:</span><span class="s2">&quot;backgroundImage&quot;</span><span class="p">,</span><span class="nx">params</span><span class="o">:</span><span class="s2">&quot;url(a.png), url(b.png), 50%&quot;</span><span class="p">}};</span><span class="nx">e</span><span class="p">[</span><span class="s2">&quot;repeating-linear-gradient&quot;</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="s2">&quot;repeating-radial-gradient&quot;</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="s2">&quot;radial-gradient&quot;</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="s2">&quot;linear-gradient&quot;</span><span class="p">];</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="p">{</span><span class="nx">initial</span><span class="o">:</span><span class="s2">&quot;color&quot;</span><span class="p">,</span><span class="s2">&quot;zoom-in&quot;</span><span class="o">:</span><span class="s2">&quot;cursor&quot;</span><span class="p">,</span><span class="s2">&quot;zoom-out&quot;</span><span class="o">:</span><span class="s2">&quot;cursor&quot;</span><span class="p">,</span><span class="nx">box</span><span class="o">:</span><span class="s2">&quot;display&quot;</span><span class="p">,</span><span class="nx">flexbox</span><span class="o">:</span><span class="s2">&quot;display&quot;</span><span class="p">,</span><span class="s2">&quot;inline-flexbox&quot;</span><span class="o">:</span><span class="s2">&quot;display&quot;</span><span class="p">,</span><span class="nx">flex</span><span class="o">:</span><span class="s2">&quot;display&quot;</span><span class="p">,</span><span class="s2">&quot;inline-flex&quot;</span><span class="o">:</span><span class="s2">&quot;display&quot;</span><span class="p">,</span><span class="nx">grid</span><span class="o">:</span><span class="s2">&quot;display&quot;</span><span class="p">,</span><span class="s2">&quot;inline-grid&quot;</span><span class="o">:</span><span class="s2">&quot;display&quot;</span><span class="p">,</span><span class="s2">&quot;min-content&quot;</span><span class="o">:</span><span class="s2">&quot;width&quot;</span><span class="p">};</span><span class="nx">n</span><span class="p">.</span><span class="nx">functions</span><span class="o">=</span><span class="p">[];</span><span class="nx">n</span><span class="p">.</span><span class="nx">keywords</span><span class="o">=</span><span class="p">[];</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">).</span><span class="nx">style</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">s</span> <span class="k">in</span> <span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">s</span><span class="p">],</span><span class="nx">u</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">property</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">s</span><span class="o">+</span><span class="s2">&quot;(&quot;</span><span class="o">+</span><span class="nx">o</span><span class="p">.</span><span class="nx">params</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">;</span><span class="o">!</span><span class="nx">i</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">u</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">prefix</span><span class="o">+</span><span class="nx">a</span><span class="p">,</span><span class="nx">u</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">n</span><span class="p">.</span><span class="nx">functions</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">s</span><span class="p">)}</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span> <span class="k">in</span> <span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">u</span><span class="o">=</span><span class="nx">t</span><span class="p">[</span><span class="nx">f</span><span class="p">];</span><span class="o">!</span><span class="nx">i</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">u</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">prefix</span><span class="o">+</span><span class="nx">f</span><span class="p">,</span><span class="nx">u</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">n</span><span class="p">.</span><span class="nx">keywords</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">f</span><span class="p">)}})();(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">s</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">i</span><span class="p">.</span><span class="nx">textContent</span><span class="o">=</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;{}&quot;</span><span class="p">;</span><span class="k">return</span><span class="o">!!</span><span class="nx">i</span><span class="p">.</span><span class="nx">sheet</span><span class="p">.</span><span class="nx">cssRules</span><span class="p">.</span><span class="nx">length</span><span class="p">}</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="p">{</span><span class="s2">&quot;:read-only&quot;</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="s2">&quot;:read-write&quot;</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="s2">&quot;:any-link&quot;</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="s2">&quot;::selection&quot;</span><span class="o">:</span><span class="kc">null</span><span class="p">},</span><span class="nx">r</span><span class="o">=</span><span class="p">{</span><span class="nx">keyframes</span><span class="o">:</span><span class="s2">&quot;name&quot;</span><span class="p">,</span><span class="nx">viewport</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nb">document</span><span class="o">:</span><span class="s1">&#39;regexp(&quot;.&quot;)&#39;</span><span class="p">};</span><span class="nx">n</span><span class="p">.</span><span class="nx">selectors</span><span class="o">=</span><span class="p">[];</span><span class="nx">n</span><span class="p">.</span><span class="nx">atrules</span><span class="o">=</span><span class="p">[];</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;style&quot;</span><span class="p">));</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">o</span> <span class="k">in</span> <span class="nx">t</span><span class="p">){</span><span class="kd">var</span> <span class="nx">u</span><span class="o">=</span><span class="nx">o</span><span class="o">+</span><span class="p">(</span><span class="nx">t</span><span class="p">[</span><span class="nx">o</span><span class="p">]</span><span class="o">?</span><span class="s2">&quot;(&quot;</span><span class="o">+</span><span class="nx">t</span><span class="p">[</span><span class="nx">o</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="o">!</span><span class="nx">s</span><span class="p">(</span><span class="nx">u</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">prefixSelector</span><span class="p">(</span><span class="nx">u</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nx">n</span><span class="p">.</span><span class="nx">selectors</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">o</span><span class="p">)}</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span> <span class="k">in</span> <span class="nx">r</span><span class="p">){</span><span class="kd">var</span> <span class="nx">u</span><span class="o">=</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">r</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="o">!</span><span class="nx">s</span><span class="p">(</span><span class="s2">&quot;@&quot;</span><span class="o">+</span><span class="nx">u</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">(</span><span class="s2">&quot;@&quot;</span><span class="o">+</span><span class="nx">n</span><span class="p">.</span><span class="nx">prefix</span><span class="o">+</span><span class="nx">u</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">n</span><span class="p">.</span><span class="nx">atrules</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="nx">e</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">i</span><span class="p">)})();</span><span class="nx">n</span><span class="p">.</span><span class="nx">valueProperties</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;transition&quot;</span><span class="p">,</span><span class="s2">&quot;transition-property&quot;</span><span class="p">];</span><span class="nx">e</span><span class="p">.</span><span class="nx">className</span><span class="o">+=</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">n</span><span class="p">.</span><span class="nx">prefix</span><span class="p">;</span><span class="nx">StyleFix</span><span class="p">.</span><span class="nx">register</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">prefixCSS</span><span class="p">)})(</span><span class="nb">document</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">);</span></div></pre></div>
//          </td>
//        </tr>
//      </table>
//  </div>
//
//          </div>
//        </div>
//
//        <a href="#jump-to-line" rel="facebox" data-hotkey="l" class="js-jump-to-line" style="display:none">Jump to Line</a>
//        <div id="jump-to-line" style="display:none">
//          <h2>Jump to Line</h2>
//          <form accept-charset="UTF-8" class="js-jump-to-line-form">
//            <input class="textfield js-jump-to-line-field" type="text">
//            <div class="full-button">
//              <button type="submit" class="button">Go</button>
//            </div>
//          </form>
//        </div>
//
//      </div>
//    </div>
//</div>
//
//<div id="js-frame-loading-template" class="frame frame-loading large-loading-area" style="display:none;">
//  <img class="js-frame-loading-spinner" src="https://a248.e.akamai.net/assets.github.com/images/spinners/octocat-spinner-128.gif?1359500886" height="64" width="64">
//</div>
//
//
//        </div>
//      </div>
//      <div class="modal-backdrop"></div>
//    </div>
//
//      <div id="footer-push"></div><!-- hack for sticky footer -->
//    </div><!-- end of wrapper - hack for sticky footer -->
//
//      <!-- footer -->
//      <div id="footer">
//  <div class="container clearfix">
//
//      <dl class="footer_nav">
//        <dt>GitHub</dt>
//        <dd><a href="https://github.com/about">About us</a></dd>
//        <dd><a href="https://github.com/blog">Blog</a></dd>
//        <dd><a href="https://github.com/contact">Contact &amp; support</a></dd>
//        <dd><a href="http://enterprise.github.com/">GitHub Enterprise</a></dd>
//        <dd><a href="http://status.github.com/">Site status</a></dd>
//      </dl>
//
//      <dl class="footer_nav">
//        <dt>Applications</dt>
//        <dd><a href="http://mac.github.com/">GitHub for Mac</a></dd>
//        <dd><a href="http://windows.github.com/">GitHub for Windows</a></dd>
//        <dd><a href="http://eclipse.github.com/">GitHub for Eclipse</a></dd>
//        <dd><a href="http://mobile.github.com/">GitHub mobile apps</a></dd>
//      </dl>
//
//      <dl class="footer_nav">
//        <dt>Services</dt>
//        <dd><a href="http://get.gaug.es/">Gauges: Web analytics</a></dd>
//        <dd><a href="http://speakerdeck.com">Speaker Deck: Presentations</a></dd>
//        <dd><a href="https://gist.github.com">Gist: Code snippets</a></dd>
//        <dd><a href="http://jobs.github.com/">Job board</a></dd>
//      </dl>
//
//      <dl class="footer_nav">
//        <dt>Documentation</dt>
//        <dd><a href="http://help.github.com/">GitHub Help</a></dd>
//        <dd><a href="http://developer.github.com/">Developer API</a></dd>
//        <dd><a href="http://github.github.com/github-flavored-markdown/">GitHub Flavored Markdown</a></dd>
//        <dd><a href="http://pages.github.com/">GitHub Pages</a></dd>
//      </dl>
//
//      <dl class="footer_nav">
//        <dt>More</dt>
//        <dd><a href="http://training.github.com/">Training</a></dd>
//        <dd><a href="https://github.com/edu">Students &amp; teachers</a></dd>
//        <dd><a href="http://shop.github.com">The Shop</a></dd>
//        <dd><a href="/plans">Plans &amp; pricing</a></dd>
//        <dd><a href="http://octodex.github.com/">The Octodex</a></dd>
//      </dl>
//
//      <hr class="footer-divider">
//
//
//    <p class="right">&copy; 2013 <span title="0.04903s from fe19.rs.github.com">GitHub</span>, Inc. All rights reserved.</p>
//    <a class="left" href="https://github.com/">
//      <span class="mega-icon mega-icon-invertocat"></span>
//    </a>
//    <ul id="legal">
//        <li><a href="https://github.com/site/terms">Terms of Service</a></li>
//        <li><a href="https://github.com/site/privacy">Privacy</a></li>
//        <li><a href="https://github.com/security">Security</a></li>
//    </ul>
//
//  </div><!-- /.container -->
//
//</div><!-- /.#footer -->
//
//
//    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
//  <div class="fullscreen-container js-fullscreen-container">
//    <div class="textarea-wrap">
//      <textarea name="fullscreen-contents" id="fullscreen-contents" class="js-fullscreen-contents" placeholder="" data-suggester="fullscreen_suggester"></textarea>
//          <div class="suggester-container">
//              <div class="suggester fullscreen-suggester js-navigation-container" id="fullscreen_suggester"
//                 data-url="/LeaVerou/prefixfree/suggestions/commit">
//              </div>
//          </div>
//    </div>
//  </div>
//  <div class="fullscreen-sidebar">
//    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped leftwards" title="Exit Zen Mode">
//      <span class="mega-icon mega-icon-normalscreen"></span>
//    </a>
//    <a href="#" class="theme-switcher js-theme-switcher tooltipped leftwards"
//      title="Switch themes">
//      <span class="mini-icon mini-icon-brightness"></span>
//    </a>
//  </div>
//</div>
//
//
//
//    <div id="ajax-error-message" class="flash flash-error">
//      <span class="mini-icon mini-icon-exclamation"></span>
//      Something went wrong with that request. Please try again.
//      <a href="#" class="mini-icon mini-icon-remove-close ajax-error-dismiss"></a>
//    </div>
//
//    
//    
//    <span id='server_response_time' data-time='0.04946' data-host='fe19'></span>
//    
//  </body>
//</html>